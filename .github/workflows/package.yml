# This is a basic workflow to help you get started with Actions

name: Build and package libopenmpt

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  EM_VERSION: 3.1.42
  EM_CACHE_FOLDER: 'emsdk-cache'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup cache
        id: cache-system-libraries
        uses: actions/cache@v2
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ runner.os }}
      - uses: mymindstorm/setup-emsdk@v12
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}
      - name: Checkout libopenmpt
        uses: actions/checkout@v3
        with:
          repository: OpenMPT/openmpt
          ref: libopenmpt-0.7.2
          path: openmpt
      - name: Build libopenmpt
        run: cd openmpt && env CPPFLAGS="-DMPT_BUILD_AUDIOWORKLETPROCESSOR" LDFLAGS="-s EXPORTED_RUNTIME_METHODS=UTF8ToString,stringToUTF8 -s EXPORTED_FUNCTIONS=\"['_malloc','_free']\" -s EXPORT_ES6=1 -s MODULARIZE=1 -s WASM=1 -s WASM_ASYNC_COMPILATION=0 -s SINGLE_FILE=1 -s ENVIRONMENT=web" make CONFIG=emscripten TEST=0
      - name: Prepare files
        run: |
          mkdir build
          cp ./package.json build
          cp ./openmpt/bin/libopenmpt.js build
      - name: Publish
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: audioworklet-build
          publish_dir: ./build
